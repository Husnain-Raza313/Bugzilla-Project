
<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>
function changeStatusforBug(){
  var element = document.getElementById("feature_status");
  element.classList.add("status_class");
  var element = document.getElementById("bug_status");
  element.classList.remove("status_class");

}

 function changeStatusforFeature(){
  var element = document.getElementById("bug_status");
  element.classList.add("status_class");
  var element = document.getElementById("feature_status");
  element.classList.remove("status_class");





 }

function checkStatus(){
  link = document.querySelector('#feature_id');
    let check = link.getAttribute('checked');
  console.log(check)
  check== null ? changeStatusforBug() : changeStatusforFeature()

}

function loadBugs() {
   var bugs=[];
      let STATUS = $('#status').val();
    $.ajax({
      type: "GET",
      contentType: "application/json; charset=utf-8",
      url: "/bugs/autocomplete?status="+STATUS+"&&autocomplete=true",
      dataType: "json",
      success: function (data) {
         console.log(data);
         bugs=data;
         <%# result($.map(data,function(item){
          return item;
         })); %>
      },

      error : function(data) {

      }
   });

<%# $('#bugs_search').typeahead({minLength: 1,
    order: "asc",
    source: function(query, result){

      let STATUS = $('#status').val();
      let QUERY = $('#bugs_search').val();

      $.ajax({
      type: "GET",
      contentType: "application/json; charset=utf-8",
      url: "/bugs/autocomplete?query="+QUERY+"&&status="+STATUS,
      dataType: "json",
      success: function (data) {
         console.log(data);
         bugs=data;
         result($.map(data,function(item){
          return item;
         }));
      },

      error : function(data) {

      }
   });


}}); %>

var inputBox = document.querySelector(".typeahead");
var searchWrapper = document.querySelector(".search-input");
var suggBox = searchWrapper.querySelector(".autocom-box");
inputBox.onkeyup = (e)=>{
    let userData = e.target.value;
    let emptyArray = [];
    if(userData){
      emptyArray = bugs.filter((data)=>{
            return data.toLocaleLowerCase().startsWith(userData.toLocaleLowerCase());
        });
        emptyArray = emptyArray.map((data)=>{
            return data = `<li>${data}</li>`;
        });
        searchWrapper.classList.add("active");
        showSuggestions(emptyArray);
        let allList = suggBox.querySelectorAll("li");
        for (let i = 0; i < allList.length; i++) {
            allList[i].addEventListener ("click", function() { select(allList[i]) });
        }
    }else{
        searchWrapper.classList.remove("active");
    }
}
function select(element){
    let selectData = element.textContent;
    inputBox.value = selectData;
    console.log(element);
    searchWrapper.classList.remove("active");
}
function showSuggestions(list){
    let listData;
    if(!list.length){
        userValue = inputBox.value;
        listData = `<li>${userValue}</li>`;
    }else{
      listData = list.join('');
    }
    suggBox.innerHTML = listData;
}

};


$(document).on('click', '#submission-btn', function(){
  var stripe = Stripe('<%= Rails.application.credentials[:stripe][:public] %>');
    var fonts = [{
    cssSrc: "https://fonts.googleapis.com/css?family=Karla",
  }];
  // styles for the stripe inputs
  var styles = {
    base: {
      iconColor: "#cccccc",
      color: "#000000",
      fontFamily: "MonumentGroteskTrial-Regular",
      fontSize: "16px",

      "::placeholder": {
        color: "#ccc"
      },
      ":-webkit-autofill": {
        color: "#ccc"
      }
    },
    invalid: {
      iconColor: "#FFC7EE",
      color: "#A31621"
    }
  }

  var elements = stripe.elements();
  var cardElement = elements.create('card', {style: styles});
  cardElement.mount('#card');

    const form = document.querySelector('#new_submission');
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    let bugID = $('#bugID').html();
    // Step 1: POST request to create payment intent
    fetch('/payment_intents?id='+bugID, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    })
    .then((response) => response.json())
    .then((paymentIntent) => {
      // Step 2: Create payment method and confirm payment intent.
      if (paymentIntent.message){
      alert(paymentIntent.message); }
      stripe.confirmCardPayment(
        paymentIntent.client_secret, {
          payment_method: {
            card: cardElement
          }
        }
      ).then((resp) => {
        if(resp.error) {
          alert(resp.error.message);
        } else {
          alert(resp.paymentIntent.status);
          <%# form.submit(); %>
        }
      })
    })
    .catch((error) => {
      console.log(error.message);
    });
  });

});








